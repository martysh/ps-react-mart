(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,function(e,n,t){"use strict";var r=t(0),a=t.n(r);var o=function(e){var n=e.htmlFor,t=e.label,r=e.required;return a.a.createElement("label",{style:{display:"block"},htmlFor:n},t," ",r&&a.a.createElement("span",{style:{color:"red"}}," *"))};t.d(n,"a",function(){return o})},function(e,n,t){"use strict";var r=t(1),a=t(2),o=t(4),i=t(3),s=t(5),l=t(0),p=t.n(l);function u(e,n){return parseInt(n*(e/100),10)}var d=function(e){function n(){var e,t;Object(r.a)(this,n);for(var a=arguments.length,s=new Array(a),l=0;l<a;l++)s[l]=arguments[l];return(t=Object(o.a)(this,(e=Object(i.a)(n)).call.apply(e,[this].concat(s)))).getColor=function(e){return 100===t.props.percent?"green":t.props.percent>50?"lightgreen":"red"},t}return Object(s.a)(n,e),Object(a.a)(n,[{key:"render",value:function(){var e=this.props,n=e.percent,t=e.width,r=e.height;return p.a.createElement("div",{style:{border:"solid 1px lightgray",width:t}},p.a.createElement("div",{style:{width:u(n,t),height:r,backgroundColor:this.getColor(n)}}))}}]),n}(p.a.Component);d.defaultProps={height:5};var c=d;t.d(n,"a",function(){return c})},function(e,n,t){"use strict";var r=t(6),a=t(0),o=t.n(a),i=t(7);var s=function(e){var n=e.htmlId,t=e.name,a=e.label,s=e.type,l=void 0===s?"text":s,p=e.required,u=void 0!==p&&p,d=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,f=e.iconSuffix,y=Object(r.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children","iconSuffix"]);return o.a.createElement(o.a.Fragment,null,o.a.createElement(i.a,{htmlFor:n,label:a,required:u}),o.a.createElement("span",{style:{position:"relative",display:"inline-block"}},o.a.createElement("input",Object.assign({id:n,type:l,name:t,placeholder:c,value:m,onChange:d,style:h&&{border:"solid 1px red"}},y)),f),g,h&&o.a.createElement("div",{className:"error",style:{color:"red"}},h))};t.d(n,"a",function(){return s})},,,function(e,n,t){"use strict";var r=t(6),a=t(1),o=t(2),i=t(4),s=t(3),l=t(5),p=t(0),u=t.n(p),d=t(8),c=t(13),m=t(9),h=function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(i.a)(this,Object(s.a)(n).call(this,e))).toggleShowPassword=function(e){t.setState(function(e){return{showPassword:!e.showPassword}})},t.state={showPassword:!1},t}return Object(l.a)(n,e),Object(o.a)(n,[{key:"render",value:function(){var e=this.props,n=e.htmlId,t=e.value,a=e.label,o=e.error,i=e.onChange,s=e.placeholder,l=e.maxLength,p=e.showVisibilityToggle,h=e.quality,g=Object(r.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),f=this.state.showPassword,y=p&&u.a.createElement(c.a,{onClick:this.toggleShowPassword,style:{width:"1em",height:"1em",position:"absolute",top:"50%",transform:"translateY(-50%)",right:"5px"}});return u.a.createElement(m.a,Object.assign({htmlId:n,label:a,placeholder:s,type:f?"text":"password",onChange:i,iconSuffix:y,value:t,maxLength:l,error:o,required:!0},g),t&&t.length>0&&h&&u.a.createElement(d.a,{percent:h,width:130}))}}]),n}(u.a.Component);h.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var g=h;t.d(n,"a",function(){return g})},function(e,n,t){"use strict";var r=t(0),a=t.n(r);var o=function(e){return a.a.createElement("svg",Object.assign({width:"16",height:"16"},e,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22"}),a.a.createElement("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d"},a.a.createElement("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),a.a.createElement("circle",{cx:"466.08",cy:"466.02",r:"134.5"})))};t.d(n,"a",function(){return o})},,function(e,n,t){"use strict";var r=t(0),a=t.n(r);var o=function(e){return a.a.createElement("svg",Object.assign({width:"16",height:"16"},e,{"aria-label":"Add",viewBox:"0 0 24 24"}),a.a.createElement("path",{fill:"none",stroke:"#000",strokeWidth:"2",d:"M12,22 L12,2 M2,12 L22,12"}))};t.d(n,"a",function(){return o})},,function(e,n,t){e.exports={error:"TextInput_error__2YVSd",inputError:"TextInput_inputError__2WDV-",fieldset:"TextInput_fieldset__3nRGQ",wrapper:"TextInput_wrapper__3unUI"}},function(e,n){e.exports=[{name:"Button",description:"",props:{theme:{type:{name:"object"},required:!1,description:"theme",defaultValue:{value:"{\n  color: 'tomato',\n  bgColor: 'white',\n  fontSize: '1rem',\n}",computed:!1}},round:{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1}},primary:{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1}},disabled:{type:{name:"bool"},required:!1,description:"",defaultValue:{value:"false",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n/*--primary-color : ${props => props.theme.color || 'tomato'};*/\n/* color: var(--primary-color, ${props => props.theme.color}, 'tomato'); */\n\n\nconst StyledButton = styled.button`\n  /*  invert if primary */\n  --primary-color: ${props=> props.primary ? props.theme.bgColor: props.theme.color};\n  --bg-color: ${props =>  props.primary? props.theme.color : props.theme.bgColor};\n  --border-color: ${props=> props.theme.color};\n  --btn-font-size: ${props=> props.theme.fontSize};\n\n  color : var(--primary-color);\n  background-color: var(--bg-color);\n  border: 2px solid var( --border-color);\n  font-size: var( --btn-font-size);\n\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  letter-spacing: 1px;\n  font-weight: 700;\n  padding: 0.3em 0.5em;\n  border-radius: ${props => props.round ? '50%' : '3px'}\n  &[disabled]{\n    opacity: 0.4;\n  }\n`;\n\nconst Button = (props) => {\n  const mergedTheme = Object.assign({}, Button.defaultProps.theme, props.theme || {});\n  const componentProps = {...props, theme: mergedTheme};\n  return <StyledButton {...componentProps} />\n};\n\nButton.propTypes = {\n  /** theme */\n  theme: PropTypes.object,\n\n  round: PropTypes.bool,\n  /* is primary */\n\n  primary: PropTypes.bool,\n  disabled: PropTypes.bool\n};\n\n\nButton.defaultProps = {\n  round: false,\n  primary: false,\n  disabled: false,\n  theme: {\n    color: 'tomato',\n    bgColor: 'white',\n    fontSize: '1rem',\n  }\n};\n\nexport default Button;\n",examples:[{name:"ExampleButtons",description:"Optional Button",code:"import React from 'react';\nimport styled from 'styled-components';\nimport Button from 'ps-react/Button';\nimport EyeIcon from 'ps-react/EyeIcon';\nimport PlusIcon from 'ps-react/PlusIcon';\n\n\nconst DecoratedButton = styled(Button)`\n    margin-left 0.5em;\n`;\n\n/** Optional Button */\nexport default function ExampleButtons() {\n  return (<>\n    <DecoratedButton >regular</DecoratedButton>\n    <DecoratedButton primary >primary</DecoratedButton>\n    <DecoratedButton ><EyeIcon/></DecoratedButton>\n    <DecoratedButton primary disabled >primary</DecoratedButton>\n    <DecoratedButton primary theme={{color:'papayawhip', bgColor: 'purple'}} >\n      <PlusIcon/>\n    different</DecoratedButton>\n    <DecoratedButton primary theme={{fontSize:'2rem'}} >large button</DecoratedButton>\n  </>)\n}\n"}]},{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from \'react\';\n\n/** SVG Eye Icon */\nfunction EyeIcon(props) {\n  // Attribution: Fabi\xe1n Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\n  return (\n    <svg width="16" height="16" {...props} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22">\n      <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\n        <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\n        <circle cx="466.08" cy="466.02" r="134.5" />\n      </g>\n    </svg>\n  )\n}\n\nexport default EyeIcon;\n',examples:[{name:"ExampleIcon",description:"",code:"import React from 'react';\nimport EyeIcon from 'ps-react/EyeIcon';\n\nexport default function EyeIconExample() {\n  return <EyeIcon />;\n}\n"}]},{name:"HelloWorld",description:"Syper lame hello world component",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:"'World'",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Syper lame hello world component */\nfunction HelloWorld({message}) {\n  return (\n    <div>\n      Hello {message}\n    </div>\n  )\n}\n\nHelloWorld.propTypes = {\n  /** Message to display */\n  message:PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n  message:'World'\n};\n\nexport default HelloWorld;\n",examples:[{name:"ExampleHelloWorld",description:"custom message",code:'import React from \'react\';\nimport HelloWorld from "ps-react/HelloWorld";\n\n/** custom message */\nfunction ExampleHelloWorld() {\n  return (\n    <HelloWorld message="javascript" />\n  )\n}\n\nexport default ExampleHelloWorld\n'}]},{name:"Label",description:"Label with required field display, htmlFor, and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:"HTML ID for associated input"},label:{type:{name:"string"},required:!0,description:"Label text"},required:{type:{name:"bool"},required:!1,description:"Display asterisk after label if true"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({htmlFor, label, required}) {\n  return (\n    <label style={{display: 'block'}} htmlFor={htmlFor}>\n      {label} { required && <span style={{color: 'red'}}> *</span> }\n    </label>\n  )\n}\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Label text */\n  label: PropTypes.string.isRequired,\n\n  /** Display asterisk after label if true */\n  required: PropTypes.bool\n};\n\nexport default Label;\n",examples:[{name:"ExampleOptional",description:"Optional label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Optional label */\nexport default function ExampleOptional() {\n  return <Label htmlFor=\"test\" label=\"test\" />\n}\n"},{name:"ExampleRequired",description:"Optional label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Optional label */\nexport default function ExampleRequired() {\n  return <Label htmlFor=\"test\" label=\"test\" required={true} />\n}\n"}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    }\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n  }\n\n  render() {\n    const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props } = this.props;\n    const { showPassword } = this.state;\n    const IconSuffix = showVisibilityToggle &&\n        <EyeIcon onClick={this.toggleShowPassword}\n        style={{ width: '1em', height: '1em', position: 'absolute', top: '50%', transform:'translateY(-50%)', right:'5px' }}/>;\n    return (\n        <TextInput\n          htmlId={htmlId}\n          label={label}\n          placeholder={placeholder}\n          type={showPassword ? 'text' : 'password'}\n          onChange={onChange}\n          iconSuffix={IconSuffix}\n          value={value}\n          maxLength={maxLength}\n          error={error}\n          required\n          {...props}>\n\n          {\n            value && value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n          }\n        </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n};\n\nexport default PasswordInput;\n",examples:[{name:"Example1",description:"",code:"import React from 'react';\nimport PasswordInput from 'ps-react/PasswordInput';\n\nfunction Example1() {\n  return (\n    <div>\n      <PasswordInput htmlId=\"example-optional\"\n      name=\"firstname\"\n      onChange={()=> {}}/>\n    </div>\n  )\n}\n\nexport default Example1\n"},{name:"Example2",description:"",code:'import React from \'react\';\nimport PasswordInput from \'ps-react/PasswordInput\';\n\nfunction Example2() {\n  return (\n    <div>\n      <PasswordInput htmlId="example2"\n      name="firstname"\n      value="somestupidpassword"\n      quality={30}\n      showVisibilityToggle\n      onChange={()=> {}}/>\n    </div>\n  )\n}\n\nexport default Example2\n'},{name:"ExampleAllFeatures",description:"All features enabled",code:'import React from \'react\';\nimport PasswordInput from \'ps-react/PasswordInput\';\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: \'initial\'\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId="password-input-example-all-features"\n          name="password"\n          onChange={ event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder="Enter password"\n          error="some error just happened"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default ExampleAllFeatures;\n'}]},{name:"PasswordInputHooks",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nfunction PasswordInputHooks (props) {\n  const [showPassword, togglePassword] = useState(false);\n\n  const { htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...rest } = props;\n  const IconSuffix = showVisibilityToggle &&\n      <EyeIcon onClick={()=>togglePassword(!showPassword)}\n      style={{ width: '1em', height: '1em', position: 'absolute', top: '50%', transform:'translateY(-50%)', right:'5px' }}/>;\n  return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? 'text' : 'password'}\n        onChange={onChange}\n        iconSuffix={IconSuffix}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...rest}>\n\n        {\n          value && value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n        }\n      </TextInput>\n  );\n\n}\n\nPasswordInputHooks.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInputHooks.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n};\n\nexport default PasswordInputHooks;\n",examples:[{name:"ExampleAllFeatures",description:"All features enabled",code:'import React from \'react\';\nimport PasswordInputHooks from \'ps-react/PasswordInputHooks\';\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: \'initial\'\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInputHooks\n          htmlId="password-input-example-all-features"\n          name="password"\n          onChange={ event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder="Enter password"\n          error="some error just happened"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default ExampleAllFeatures;\n'}]},{name:"PlusIcon",description:"",code:'import React from \'react\'\n\nfunction PlusIcon(props) {\n  return (\n    <svg  width="16" height="16" {...props} aria-label="Add" viewBox="0 0 24 24"><path fill="none" stroke="#000"\n      strokeWidth="2" d="M12,22 L12,2 M2,12 L22,12"></path></svg>\n  )\n};\n\nexport default PlusIcon;\n',examples:[{name:"PlusExample",description:"",code:"import React from 'react';\nimport PlusIcon from 'ps-react/PlusIcon';\n\nexport default function PlusIconExample() {\n  return <PlusIcon />;\n}\n"}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Bar width"},height:{type:{name:"number"},required:!1,description:"Bar height",defaultValue:{value:"5",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getWidthAsPercentOfTotalWidth} from '../../utils/percentUtils';\n\nclass ProgressBar extends React.Component {\n  getColor = (percent) => {\n    if (this.props.percent === 100) return 'green';\n    return this.props.percent > 50 ? 'lightgreen' : 'red';\n  }\n\n  render() {\n    const {percent, width, height} = this.props;\n    return (\n      <div style={{border: 'solid 1px lightgray', width: width}}>\n        <div style={{\n          width: getWidthAsPercentOfTotalWidth(percent, width),\n          height,\n          backgroundColor: this.getColor(percent)\n        }} />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n  height: 5\n};\n\nexport default ProgressBar;\n",examples:[{name:"Example100Percent",description:"100% Percent",code:"import React from 'react';\nimport ProgressBar from \"ps-react/ProgressBar\";\n\n/** 100% Percent */\nexport default function Example70Percent() {\n  return (\n    <div>\n      <ProgressBar percent={100} width={150} height={20} />\n    </div>\n  )\n}\n"},{name:"Example10Percent",description:"10% Percent",code:"import React from 'react';\nimport ProgressBar from \"ps-react/ProgressBar\";\n\n/** 10% Percent */\nexport default function Example10Percent() {\n  return (\n    <div>\n      <ProgressBar percent={10} width={150} height={20} />\n    </div>\n  )\n}\n"},{name:"Example70Percent",description:"70% Percent",code:"import React from 'react';\nimport ProgressBar from \"ps-react/ProgressBar\";\n\n/** 70% Percent */\nexport default function Example70Percent() {\n  return (\n    <div>\n      <ProgressBar percent={70} width={150} height={10} />\n    </div>\n  )\n}\n"}]},{name:"RegistrationForm",description:"Registration form with built-in validation.",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport TextInput from \'../TextInput\';\nimport PasswordInput from \'../PasswordInput\';\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: \'\',\n        password: \'\'\n      },\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  onChange = (event) => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({user});\n  }\n\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  passwordQuality(password) {\n    if (!password) return null;\n    if (password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\n    return percentOfMinLength;\n  }\n\n  validate({email, password}) {\n    const errors = {};\n    const {minPasswordLength} = this.props;\n\n    if (!email) errors.email = \'Email required.\';\n    if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n    this.setState({errors});\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const {user} = this.state;\n    const formIsValid = this.validate(user);\n    if (formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({submitted: true});\n    }\n  }\n\n  render() {\n    const {errors, submitted} = this.state;\n    const {email, password} = this.state.user;\n\n    return (\n      submitted ?\n      <h2>{this.props.confirmationMessage}</h2> :\n      <div>\n        <TextInput\n          htmlId="registration-form-email"\n          name="email"\n          onChange={this.onChange}\n          label="Email"\n          value={email}\n          error={errors.email}\n          required />\n\n        <PasswordInput\n          htmlId="registration-form-password"\n          name="password"\n          value={password}\n          onChange={this.onChange}\n          quality={this.passwordQuality(password)}\n          showVisibilityToggle\n          maxLength={50}\n          error={errors.password} />\n\n        <input type="submit" value="Register" onClick={this.onSubmit} />\n      </div>\n    )\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n}\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: "Thanks for registering!",\n  minPasswordLength: 8\n};\n\nexport default RegistrationForm;\n',examples:[{name:"ExampleRegistrationForm",description:"",code:"import React from 'react';\nimport RegistrationForm from 'ps-react/RegistrationForm';\n\nexport default class ExampleRegistrationForm extends React.Component {\n  onSubmit = (user) => {\n    console.log(user);\n  }\n\n  render() {\n    return <RegistrationForm onSubmit={this.onSubmit} />\n  }\n}\n"}]},{name:"TextInput",description:"Text input with integrated label to enforce consistency in layout,\nerror display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input.\nHandy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to\nmatch object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout,\n * error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\",\n    required = false, onChange, placeholder,\n    value, error, children, iconSuffix, ...props}) {\n  return (\n    <>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <span style={{position:'relative', display:'inline-block'}} >\n        <input\n          id={htmlId}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          style={error && {border: 'solid 1px red'}}\n        {...props}/>\n        {iconSuffix}\n        </span>\n        {children}\n      {error && <div className=\"error\" style={{color: 'red'}}>{error}</div>}\n    </>\n  );\n};\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input.\n   * Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to\n   * match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n",examples:[{name:"ExampleError",description:"",code:'import React from \'react\';\nimport TextInput from \'ps-react/TextInput\';\n\nfunction ExampleError() {\n  return (\n    <div>\n      <TextInput htmlId="example-optional"\n      required\n      label="First Name"\n      name="firstname"\n      error="First name is required."\n      onChange={()=> {}}/>\n    </div>\n  )\n}\n\nexport default ExampleError\n'},{name:"ExampleOptional",description:"",code:'import React from \'react\';\nimport TextInput from \'ps-react/TextInput\';\n\nfunction ExampleOptional() {\n  return (\n    <div>\n      <TextInput htmlId="example-optional"\n      label="FirstName"\n      name="firstname"\n      onChange={()=> {}}/>\n    </div>\n  )\n}\n\nexport default ExampleOptional\n'}]},{name:"TextInputBEM",description:"Text input with integrated label to enforce consistency in layout,\nerror display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input.\nHandy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to\nmatch object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout,\n * error display, label placement, and required field marker. */\nfunction TextInputBEM({htmlId, name, label, type = \"text\",\n    required = false, onChange, placeholder,\n    value, error, children, iconSuffix, ...props}) {\n  return (\n    <div className=\"textinput\">\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <span className=\"textinput__input-wrapper\" >\n        <input\n          id={htmlId}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          className={error && \"textinput__input--state-error\"}\n        {...props}/>\n        {iconSuffix}\n        </span>\n        {children}\n      {error && <div className=\"textinput__error\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputBEM.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input.\n   * Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to\n   * match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInputBEM;\n",examples:[{name:"TextExample",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputBEM from \'ps-react/TextInputBEM\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputBEM\n        htmlId="example-optional"\n        label="First Name"\n        name="firstname"\n        onChange={() => {}}\n        required\n        error="First name is required."\n       />\n    )\n  }\n}\n'}]},{name:"TextInputCSSModules",description:"Text input with integrated label to enforce consistency in layout,\nerror display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input.\nHandy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to\nmatch object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styles from './TextInput.module.css';\n\n/** Text input with integrated label to enforce consistency in layout,\n * error display, label placement, and required field marker. */\nfunction TextInputCSSModules({htmlId, name, label, type = \"text\",\n    required = false, onChange, placeholder,\n    value, error, children, iconSuffix, ...props}) {\n  return (\n    <>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <span className={styles.wrapper} >\n        <input\n          id={htmlId}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          className={error && styles.inputError}\n        {...props}/>\n        {iconSuffix}\n        </span>\n        {children}\n      {error && <div className={styles.error} >{error}</div>}\n    </>\n  );\n};\n\nTextInputCSSModules.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input.\n   * Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to\n   * match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInputCSSModules;\n",examples:[{name:"TextExample",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputCSSModules from \'ps-react/TextInputCSSModules\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputCSSModules\n        htmlId="example-optional"\n        label="First Name"\n        name="firstname"\n        onChange={() => {}}\n        required\n        error="First name is required."\n       />\n    )\n  }\n}\n'}]},{name:"TextInputStyledC",description:"Text input with integrated label to enforce consistency in layout,\nerror display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input.\nHandy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to\nmatch object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styled from 'styled-components';\n\nconst FieldSet = styled.div`\n  margin-bottom: 16px;\n`;\nconst Error = styled.div`\n  color:red;\n`;\nconst Input = styled.input`\n  border: ${props=>props.error&&'solid 1px red'};\n  display: block;\n`;\n\nconst Wrapper = styled.span`\n  position: relative;\n  display: inline-block;\n`;\n\n/** Text input with integrated label to enforce consistency in layout,\n * error display, label placement, and required field marker. */\nfunction TextInputStyledC({htmlId, name, label, type = \"text\",\n    required = false, onChange, placeholder,\n    value, error, children, iconSuffix, ...props}) {\n  return (\n    <FieldSet>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <Wrapper >\n        <Input\n          id={htmlId}\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        {...props}/>\n        {iconSuffix}\n        </Wrapper>\n        {children}\n      {error && <Error>{error}</Error>}\n    </FieldSet>\n  );\n};\n\nTextInputStyledC.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input.\n   * Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to\n   * match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInputStyledC;\n",examples:[{name:"Example",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputStyledC from \'ps-react/TextInputStyledC\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputStyledC\n        htmlId="example-optional"\n        label="First Name"\n        name="firstname"\n        onChange={() => {}}\n        required\n        error="First name is required."\n       />\n    )\n  }\n}\n'}]}]},,,,,function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var r=t(0),a=t.n(r),o=t(13);function i(){return a.a.createElement(o.a,null)}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var r=t(0),a=t.n(r),o=t(7);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"test"})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var r=t(0),a=t.n(r),o=t(7);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"test",required:!0})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(12);n.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{htmlId:"example-optional",name:"firstname",onChange:function(){}}))}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(12);n.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{htmlId:"example2",name:"firstname",value:"somestupidpassword",quality:30,showVisibilityToggle:!0,onChange:function(){}}))}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(4),i=t(3),s=t(5),l=t(0),p=t.n(l),u=t(12),d=function(e){function n(e){var t;return Object(r.a)(this,n),(t=Object(o.a)(this,Object(i.a)(n).call(this,e))).state={password:"initial"},t}return Object(s.a)(n,e),Object(a.a)(n,[{key:"getQuality",value:function(){var e=this.state.password.length;return e>10?100:10*e}},{key:"render",value:function(){var e=this;return p.a.createElement("div",null,p.a.createElement(u.a,Object.assign({htmlId:"password-input-example-all-features",name:"password",onChange:function(n){return e.setState({password:n.target.value})},value:this.state.password,minLength:8,placeholder:"Enter password",error:"some error just happened",showVisibilityToggle:!0,quality:this.getQuality()},this.props)))}}]),n}(p.a.Component);n.default=d},function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var r=t(0),a=t.n(r),o=t(15);function i(){return a.a.createElement(o.a,null)}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var r=t(0),a=t.n(r),o=t(8);function i(){return a.a.createElement("div",null,a.a.createElement(o.a,{percent:100,width:150,height:20}))}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var r=t(0),a=t.n(r),o=t(8);function i(){return a.a.createElement("div",null,a.a.createElement(o.a,{percent:10,width:150,height:20}))}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var r=t(0),a=t.n(r),o=t(8);function i(){return a.a.createElement("div",null,a.a.createElement(o.a,{percent:70,width:150,height:10}))}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(9);n.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{htmlId:"example-optional",required:!0,label:"First Name",name:"firstname",error:"First name is required.",onChange:function(){}}))}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(9);n.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{htmlId:"example-optional",label:"FirstName",name:"firstname",onChange:function(){}}))}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(4),i=t(3),s=t(5),l=t(0),p=t.n(l),u=t(6),d=t(7),c=t(17),m=t.n(c);var h=function(e){var n=e.htmlId,t=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,l=e.onChange,c=e.placeholder,h=e.value,g=e.error,f=e.children,y=e.iconSuffix,b=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children","iconSuffix"]);return p.a.createElement(p.a.Fragment,null,p.a.createElement(d.a,{htmlFor:n,label:r,required:s}),p.a.createElement("span",{className:m.a.wrapper},p.a.createElement("input",Object.assign({id:n,type:o,name:t,placeholder:c,value:h,onChange:l,className:g&&m.a.inputError},b)),y),f,g&&p.a.createElement("div",{className:m.a.error},g))};t.d(n,"default",function(){return g});var g=function(e){function n(){return Object(r.a)(this,n),Object(o.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(s.a)(n,e),Object(a.a)(n,[{key:"render",value:function(){return p.a.createElement(h,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),n}(p.a.Component)},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(4),i=t(3),s=t(5),l=t(0),p=t.n(l),u=(t(62),t(6)),d=t(7);var c=function(e){var n=e.htmlId,t=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,l=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,f=e.iconSuffix,y=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children","iconSuffix"]);return p.a.createElement("div",{className:"textinput"},p.a.createElement(d.a,{htmlFor:n,label:r,required:s}),p.a.createElement("span",{className:"textinput__input-wrapper"},p.a.createElement("input",Object.assign({id:n,type:o,name:t,placeholder:c,value:m,onChange:l,className:h&&"textinput__input--state-error"},y)),f),g,h&&p.a.createElement("div",{className:"textinput__error"},h))};t.d(n,"default",function(){return m});var m=function(e){function n(){return Object(r.a)(this,n),Object(o.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(s.a)(n,e),Object(a.a)(n,[{key:"render",value:function(){return p.a.createElement(c,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),n}(p.a.Component)},function(e,n,t){"use strict";t.r(n);var r=t(10),a=t(0),o=t.n(a),i=t(11),s=t(47);function l(){var e=Object(r.a)(["\n  /*  invert if primary */\n  --primary-color: ",";\n  --bg-color: ",";\n  --border-color: ",";\n  --btn-font-size: ",";\n\n  color : var(--primary-color);\n  background-color: var(--bg-color);\n  border: 2px solid var( --border-color);\n  font-size: var( --btn-font-size);\n\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  letter-spacing: 1px;\n  font-weight: 700;\n  padding: 0.3em 0.5em;\n  border-radius: ","\n  &[disabled]{\n    opacity: 0.4;\n  }\n"]);return l=function(){return e},e}var p=i.a.button(l(),function(e){return e.primary?e.theme.bgColor:e.theme.color},function(e){return e.primary?e.theme.color:e.theme.bgColor},function(e){return e.theme.color},function(e){return e.theme.fontSize},function(e){return e.round?"50%":"3px"}),u=function e(n){var t=Object.assign({},e.defaultProps.theme,n.theme||{}),r=Object(s.a)({},n,{theme:t});return o.a.createElement(p,r)};u.defaultProps={round:!1,primary:!1,disabled:!1,theme:{color:"tomato",bgColor:"white",fontSize:"1rem"}};var d=u,c=t(13),m=t(15);function h(){var e=Object(r.a)(["\n    margin-left 0.5em;\n"]);return h=function(){return e},e}t.d(n,"default",function(){return f});var g=Object(i.a)(d)(h());function f(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(g,null,"regular"),o.a.createElement(g,{primary:!0},"primary"),o.a.createElement(g,null,o.a.createElement(c.a,null)),o.a.createElement(g,{primary:!0,disabled:!0},"primary"),o.a.createElement(g,{primary:!0,theme:{color:"papayawhip",bgColor:"purple"}},o.a.createElement(m.a,null),"different"),o.a.createElement(g,{primary:!0,theme:{fontSize:"2rem"}},"large button"))}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(4),i=t(3),s=t(5),l=t(0),p=t.n(l),u=t(9),d=t(12),c=function(e){function n(e){var t;return Object(r.a)(this,n),(t=Object(o.a)(this,Object(i.a)(n).call(this,e))).onChange=function(e){var n=t.state.user;n[e.target.name]=e.target.value,t.setState({user:n})},t.onSubmit=function(){var e=t.state.user;t.validate(e)&&(t.props.onSubmit(e),t.setState({submitted:!0}))},t.state={user:{email:"",password:""},errors:{},submitted:!1},t}return Object(s.a)(n,e),Object(a.a)(n,[{key:"passwordQuality",value:function(e){return e?e.length>=this.props.minPasswordLength?100:parseInt(e.length/this.props.minPasswordLength*100,10):null}},{key:"validate",value:function(e){var n=e.email,t=e.password,r={},a=this.props.minPasswordLength;return n||(r.email="Email required."),t.length<a&&(r.password="Password must be at least ".concat(a," characters.")),this.setState({errors:r}),0===Object.getOwnPropertyNames(r).length}},{key:"render",value:function(){var e=this.state,n=e.errors,t=e.submitted,r=this.state.user,a=r.email,o=r.password;return t?p.a.createElement("h2",null,this.props.confirmationMessage):p.a.createElement("div",null,p.a.createElement(u.a,{htmlId:"registration-form-email",name:"email",onChange:this.onChange,label:"Email",value:a,error:n.email,required:!0}),p.a.createElement(d.a,{htmlId:"registration-form-password",name:"password",value:o,onChange:this.onChange,quality:this.passwordQuality(o),showVisibilityToggle:!0,maxLength:50,error:n.password}),p.a.createElement("input",{type:"submit",value:"Register",onClick:this.onSubmit}))}}]),n}(p.a.Component);c.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var m=c;t.d(n,"default",function(){return h});var h=function(e){function n(){var e,t;Object(r.a)(this,n);for(var a=arguments.length,s=new Array(a),l=0;l<a;l++)s[l]=arguments[l];return(t=Object(o.a)(this,(e=Object(i.a)(n)).call.apply(e,[this].concat(s)))).onSubmit=function(e){console.log(e)},t}return Object(s.a)(n,e),Object(a.a)(n,[{key:"render",value:function(){return p.a.createElement(m,{onSubmit:this.onSubmit})}}]),n}(p.a.Component)},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(4),i=t(3),s=t(5),l=t(0),p=t.n(l),u=t(6),d=t(45),c=t(8),m=t(13),h=t(9);function g(e){var n=Object(l.useState)(!1),t=Object(d.a)(n,2),r=t[0],a=t[1],o=e.htmlId,i=e.value,s=e.label,g=e.error,f=e.onChange,y=e.placeholder,b=e.maxLength,w=e.showVisibilityToggle,x=e.quality,v=Object(u.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),P=w&&p.a.createElement(m.a,{onClick:function(){return a(!r)},style:{width:"1em",height:"1em",position:"absolute",top:"50%",transform:"translateY(-50%)",right:"5px"}});return p.a.createElement(h.a,Object.assign({htmlId:o,label:s,placeholder:y,type:r?"text":"password",onChange:f,iconSuffix:P,value:i,maxLength:b,error:g,required:!0},v),i&&i.length>0&&x&&p.a.createElement(c.a,{percent:x,width:130}))}g.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var f=g,y=function(e){function n(e){var t;return Object(r.a)(this,n),(t=Object(o.a)(this,Object(i.a)(n).call(this,e))).state={password:"initial"},t}return Object(s.a)(n,e),Object(a.a)(n,[{key:"getQuality",value:function(){var e=this.state.password.length;return e>10?100:10*e}},{key:"render",value:function(){var e=this;return p.a.createElement("div",null,p.a.createElement(f,Object.assign({htmlId:"password-input-example-all-features",name:"password",onChange:function(n){return e.setState({password:n.target.value})},value:this.state.password,minLength:8,placeholder:"Enter password",error:"some error just happened",showVisibilityToggle:!0,quality:this.getQuality()},this.props)))}}]),n}(p.a.Component);n.default=y},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(4),i=t(3),s=t(5),l=t(0),p=t.n(l),u=t(6),d=t(10),c=t(7),m=t(11);function h(){var e=Object(d.a)(["\n  position: relative;\n  display: inline-block;\n"]);return h=function(){return e},e}function g(){var e=Object(d.a)(["\n  border: ",";\n  display: block;\n"]);return g=function(){return e},e}function f(){var e=Object(d.a)(["\n  color:red;\n"]);return f=function(){return e},e}function y(){var e=Object(d.a)(["\n  margin-bottom: 16px;\n"]);return y=function(){return e},e}var b=m.a.div(y()),w=m.a.div(f()),x=m.a.input(g(),function(e){return e.error&&"solid 1px red"}),v=m.a.span(h());var P=function(e){var n=e.htmlId,t=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,i=e.required,s=void 0!==i&&i,l=e.onChange,d=e.placeholder,m=e.value,h=e.error,g=e.children,f=e.iconSuffix,y=Object(u.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children","iconSuffix"]);return p.a.createElement(b,null,p.a.createElement(c.a,{htmlFor:n,label:r,required:s}),p.a.createElement(v,null,p.a.createElement(x,Object.assign({id:n,type:o,name:t,placeholder:d,value:m,onChange:l},y)),f),g,h&&p.a.createElement(w,null,h))};t.d(n,"default",function(){return E});var E=function(e){function n(){return Object(r.a)(this,n),Object(o.a)(this,Object(i.a)(n).apply(this,arguments))}return Object(s.a)(n,e),Object(a.a)(n,[{key:"render",value:function(){return p.a.createElement(P,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),n}(p.a.Component)},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r);function o(e){var n=e.message;return a.a.createElement("div",null,"Hello ",n)}o.defaultProps={message:"World"};var i=o;n.default=function(){return a.a.createElement(i,{message:"javascript"})}},,,,,,,function(e,n,t){e.exports=t(63)},,,,,,function(e,n,t){},,function(e,n,t){var r={"./Button/ExampleButtons":37,"./Button/ExampleButtons.js":37,"./EyeIcon/ExampleIcon":23,"./EyeIcon/ExampleIcon.js":23,"./HelloWorld/ExampleHelloWorld":41,"./HelloWorld/ExampleHelloWorld.js":41,"./Label/ExampleOptional":24,"./Label/ExampleOptional.js":24,"./Label/ExampleRequired":25,"./Label/ExampleRequired.js":25,"./PasswordInput/Example1":26,"./PasswordInput/Example1.js":26,"./PasswordInput/Example2":27,"./PasswordInput/Example2.js":27,"./PasswordInput/ExampleAllFeatures":28,"./PasswordInput/ExampleAllFeatures.js":28,"./PasswordInputHooks/ExampleAllFeatures":39,"./PasswordInputHooks/ExampleAllFeatures.js":39,"./PlusIcon/PlusExample":29,"./PlusIcon/PlusExample.js":29,"./ProgressBar/Example100Percent":30,"./ProgressBar/Example100Percent.js":30,"./ProgressBar/Example10Percent":31,"./ProgressBar/Example10Percent.js":31,"./ProgressBar/Example70Percent":32,"./ProgressBar/Example70Percent.js":32,"./RegistrationForm/ExampleRegistrationForm":38,"./RegistrationForm/ExampleRegistrationForm.js":38,"./TextInput/ExampleError":33,"./TextInput/ExampleError.js":33,"./TextInput/ExampleOptional":34,"./TextInput/ExampleOptional.js":34,"./TextInputBEM/TextExample":36,"./TextInputBEM/TextExample.js":36,"./TextInputCSSModules/TextExample":35,"./TextInputCSSModules/TextExample.js":35,"./TextInputStyledC/Example":40,"./TextInputStyledC/Example.js":40};function a(e){var n=o(e);return t(n)}function o(e){var n=r[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=56},,,,,,function(e,n,t){},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(14),i=t.n(o),s=(t(54),t(55),t(1)),l=t(2),p=t(4),u=t(3),d=t(5),c=function(e){var n=e.components;return a.a.createElement("ul",{className:"navigation"},n.map(function(e){return a.a.createElement("li",{key:e},a.a.createElement("a",{href:"#".concat(e)},e))}))},m=t(19),h=t.n(m),g=t(42),f=t.n(g),y=function(e){function n(){return Object(s.a)(this,n),Object(p.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(d.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){h.a.registerLanguage("javascript",f.a),h.a.highlightBlock(this.element)}},{key:"render",value:function(){var e=this;return a.a.createElement("pre",{ref:function(n){e.element=n}},a.a.createElement("code",null,this.props.children))}}]),n}(a.a.Component),b=function(e){function n(e){var t;return Object(s.a)(this,n),(t=Object(p.a)(this,Object(u.a)(n).call(this,e))).toggleCode=function(e){e.preventDefault(),t.setState(function(e){return{showCode:!e.showCode}})},t.state={showCode:!1},t}return Object(d.a)(n,e),Object(l.a)(n,[{key:"render",value:function(){var e=this.state.showCode,n=this.props.example,r=n.code,o=n.description,i=n.name,s=t(56)("./".concat(this.props.componentName,"/").concat(i)).default;return a.a.createElement("div",{className:"example"},o&&a.a.createElement("h4",null,o),a.a.createElement(s,null),a.a.createElement("p",null,a.a.createElement("a",{href:"",onClick:this.toggleCode},e?"Hide":"Show"," Code")),e&&a.a.createElement(y,null,r))}}]),n}(a.a.Component),w=function(e){var n=e.props;return a.a.createElement("table",{className:"props"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Default"),a.a.createElement("th",null,"Required"))),a.a.createElement("tbody",null,Object.keys(n).map(function(e){return a.a.createElement("tr",{key:e},a.a.createElement("td",null,e),a.a.createElement("td",null,n[e].description),a.a.createElement("td",null,n[e].type.name),a.a.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value),a.a.createElement("td",null,n[e].required&&"X"))})))},x=function(e){var n=e.component,t=n.name,r=n.description,o=n.props,i=n.examples;return a.a.createElement("div",{className:"componentpage"},a.a.createElement("h2",null,t),a.a.createElement("p",null,r),a.a.createElement("h3",null,"Example",i.length>1&&"s"),i.length>0?i.map(function(e){return a.a.createElement(b,{key:e.code,example:e,componentName:t})}):"No examples exist.",a.a.createElement("h3",null,"Props"),o?a.a.createElement(w,{props:o}):"This component accepts no props.")},v=t(18),P=t.n(v),E=function(e){function n(e){var t;return Object(s.a)(this,n),(t=Object(p.a)(this,Object(u.a)(n).call(this,e))).state={route:window.location.hash.substr(1)},t}return Object(d.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",function(){e.setState({route:window.location.hash.substr(1)})})}},{key:"render",value:function(){var e=this.state.route,n=e?P.a.filter(function(n){return n.name===e})[0]:P.a[0];return a.a.createElement("div",null,a.a.createElement(c,{components:P.a.map(function(e){return e.name})}),a.a.createElement(x,{component:n}))}}]),n}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(a.a.createElement(E,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[48,1,2]]]);
//# sourceMappingURL=main.bffc3e0d.chunk.js.map